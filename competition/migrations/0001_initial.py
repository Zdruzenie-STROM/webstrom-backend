# Generated by Django 4.2.16 on 2024-11-24 11:59

import base.models
import base.validators
import competition.models
import competition.utils.validations
import django.core.files.storage
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('posted_at', models.DateTimeField(auto_now_add=True, verbose_name='dátum pridania')),
                ('state', models.IntegerField(choices=[(1, 'čaká'), (2, 'zverejnený'), (3, 'skrytý')], default=1, verbose_name='komentár publikovaný')),
                ('hidden_response', models.TextField(blank=True, null=True, verbose_name='Skrytá odpoveď na komentár')),
            ],
            options={
                'verbose_name': 'komentár',
                'verbose_name_plural': 'komentáre',
                'ordering': ['posted_at'],
            },
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='názov')),
                ('slug', models.SlugField()),
                ('start_year', models.PositiveSmallIntegerField(blank=True, verbose_name='rok prvého ročníka súťaže')),
                ('description', models.TextField(blank=True, verbose_name='Popis súťaže')),
                ('rules', models.TextField(blank=True, null=True, verbose_name='Pravidlá súťaže')),
                ('who_can_participate', models.CharField(blank=True, max_length=50, verbose_name='Pre koho je súťaž určená')),
                ('min_years_until_graduation', models.PositiveSmallIntegerField(help_text='Horná hranica na účasť v súťaži. Zadáva sa v počte rokov do maturity. Ak najstraší, kto môže riešiť súťaž je deviatak, zadá sa 4.', null=True, verbose_name='Minimálny počet rokov do maturity')),
            ],
            options={
                'verbose_name': 'súťaž',
                'verbose_name_plural': 'súťaže',
            },
        ),
        migrations.CreateModel(
            name='CompetitionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='typ súťaže')),
                ('short_name', models.CharField(max_length=32, verbose_name='Krátky jednoslovný názov')),
            ],
            options={
                'verbose_name': 'Typ súťaže',
                'verbose_name_plural': 'Typy súťaží',
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveSmallIntegerField(blank=True, verbose_name='ročník')),
                ('school_year', models.CharField(blank=True, max_length=10, validators=[base.validators.school_year_validator], verbose_name='školský rok')),
                ('season_code', models.PositiveSmallIntegerField(choices=[(0, 'Zimný'), (1, 'Letný'), (2, '')], default=2)),
                ('start', models.DateTimeField(verbose_name='dátum začiatku súťaže')),
                ('end', models.DateTimeField(verbose_name='dátum konca súťaže')),
                ('location', models.TextField(blank=True, help_text='Napríklad "v Košiciach"', null=True, verbose_name='Miesto konania')),
                ('additional_name', models.CharField(blank=True, max_length=50, null=True, verbose_name='Prívlastok súťaže')),
            ],
            options={
                'verbose_name': 'ročník súťaže',
                'verbose_name_plural': 'ročníky súťaží',
                'ordering': ['-school_year'],
            },
        ),
        migrations.CreateModel(
            name='EventRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'registrácia užívateľa na akciu',
                'verbose_name_plural': 'registrácie užívateľov na akcie',
            },
        ),
        migrations.CreateModel(
            name='Grade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=256, verbose_name='názov ročníku')),
                ('tag', models.CharField(max_length=2, unique=True, verbose_name='skratka')),
                ('years_until_graduation', models.SmallIntegerField(verbose_name='počet rokov do maturity')),
                ('is_active', models.BooleanField(verbose_name='aktuálne používaný ročník')),
            ],
            options={
                'verbose_name': 'ročník účastníka',
                'verbose_name_plural': 'ročníky účastníka',
                'ordering': ['years_until_graduation'],
            },
        ),
        migrations.CreateModel(
            name='LateTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='označenie štítku pre riešiteľa')),
                ('slug', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(re.compile('^[-a-zA-Z0-9_]+\\Z'), 'Enter a valid “slug” consisting of letters, numbers, underscores or hyphens.', 'invalid')], verbose_name='označenie priečinku pri stiahnutí')),
                ('upper_bound', models.DurationField(verbose_name='maximálna dĺžka omeškania')),
                ('comment', models.TextField(verbose_name='komentár pre opravovateľa')),
                ('can_resubmit', models.BooleanField(verbose_name='Možnosť prepísať odovzdané riešenie')),
            ],
            options={
                'verbose_name': 'omeškanie',
                'verbose_name_plural': 'omeškanie',
            },
        ),
        migrations.CreateModel(
            name='Problem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='znenie úlohy')),
                ('order', models.PositiveSmallIntegerField(verbose_name='poradie v sérii')),
                ('image', models.ImageField(blank=True, null=True, upload_to='problem_images/', verbose_name='Obrázok k úlohe')),
                ('solution_pdf', base.models.RestrictedFileField(blank=True, null=True, upload_to='model_solutions/', verbose_name='Vzorové riešenie')),
            ],
            options={
                'verbose_name': 'úloha',
                'verbose_name_plural': 'úlohy',
                'ordering': ['series', 'order'],
            },
        ),
        migrations.CreateModel(
            name='PublicationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='názov typu')),
            ],
            options={
                'verbose_name': 'Typ publikácie',
                'verbose_name_plural': 'Typy publikácií',
            },
        ),
        migrations.CreateModel(
            name='RegistrationLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('url', models.URLField(verbose_name='url registrácie')),
                ('start', models.DateTimeField(verbose_name='Začiatok registrácie')),
                ('end', models.DateTimeField(verbose_name='Koniec registrácie')),
                ('additional_info', models.TextField(blank=True, null=True, verbose_name='Doplňujúce informácie')),
            ],
            options={
                'verbose_name': 'link na registráciu',
                'verbose_name_plural': 'linky na registráciu',
            },
        ),
        migrations.CreateModel(
            name='Series',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField(verbose_name='poradie série')),
                ('deadline', models.DateTimeField(verbose_name='termín série')),
                ('sum_method', models.CharField(blank=True, choices=[('series_simple_sum', 'Jednoduchý súčet bodov'), ('series_Malynar_sum', 'Bonifikácia Malynár'), ('series_Matik_sum', 'Bonifikácia Matik'), ('series_STROM_sum', 'Bonifikácia STROM'), ('series_Malynar_sum_until_2021', 'Bonifikácia Malynár (Do 2020/2021)'), ('series_Matik_sum_until_2021', 'Bonifikácia Matik (Do 2020/2021)'), ('series_STROM_sum_until_2021', 'Bonifikácia STROM (Do 2020/2021)'), ('series_STROM_4problems_sum', 'Bonifikácia STROM (4. úlohy)')], max_length=50, verbose_name='Súčtová metóda')),
                ('frozen_results', models.TextField(blank=True, default=None, null=True)),
            ],
            options={
                'verbose_name': 'séria',
                'verbose_name_plural': 'série',
                'ordering': ['semester', '-order'],
            },
        ),
        migrations.CreateModel(
            name='Semester',
            fields=[
                ('event_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='competition.event')),
                ('frozen_results', models.TextField(blank=True, default=None, null=True)),
            ],
            options={
                'verbose_name': 'semester',
                'verbose_name_plural': 'semestre',
                'ordering': ['-year', '-season_code'],
            },
            bases=('competition.event',),
        ),
        migrations.CreateModel(
            name='Solution',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('solution', base.models.RestrictedFileField(blank=True, storage=django.core.files.storage.FileSystemStorage(base_url='/protected/', location='/home/mihal/Documents/STROM/webstrom/webstrom-backend/protected_media/'), upload_to=competition.models.get_solution_path, verbose_name='účastnícke riešenie')),
                ('corrected_solution', base.models.RestrictedFileField(blank=True, storage=django.core.files.storage.FileSystemStorage(base_url='/protected/', location='/home/mihal/Documents/STROM/webstrom/webstrom-backend/protected_media/'), upload_to=competition.models.get_corrected_solution_path, verbose_name='opravené riešenie')),
                ('score', models.PositiveSmallIntegerField(blank=True, null=True, validators=[competition.utils.validations.validate_points], verbose_name='body')),
                ('vote', models.IntegerField(choices=[(-1, 'negatívny'), (0, 'žiaden'), (1, 'pozitívny')], default=0)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, verbose_name='dátum pridania')),
                ('is_online', models.BooleanField(default=False, verbose_name='internetové riešenie')),
                ('late_tag', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='competition.latetag', verbose_name='Stavy omeškania')),
                ('problem', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competition.problem')),
                ('semester_registration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='competition.eventregistration')),
            ],
            options={
                'verbose_name': 'riešenie',
                'verbose_name_plural': 'riešenia',
            },
        ),
        migrations.CreateModel(
            name='Publication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=30)),
                ('file', base.models.RestrictedFileField(upload_to='publications/%Y', verbose_name='súbor')),
                ('order', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='poradie')),
                ('event', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='competition.event')),
                ('publication_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='competition.publicationtype')),
            ],
            options={
                'verbose_name': 'Publikácia',
                'verbose_name_plural': 'Publikácie',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='ProblemCorrection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correct_solution_text', models.TextField(verbose_name='vzorák')),
                ('best_solution', models.ManyToManyField(to='competition.solution', verbose_name='najkrajšie riešenia')),
            ],
            options={
                'verbose_name': 'Opravenie úlohy',
                'verbose_name_plural': 'Opravené úlohy',
            },
        ),
    ]
